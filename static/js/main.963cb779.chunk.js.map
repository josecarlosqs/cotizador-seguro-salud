{"version":3,"sources":["components/field.tsx","store/personal-info.tsx","components/screen/home-screen.tsx","utils/validate.tsx","components/step-indicator.tsx","components/screen/personal-info-screen.tsx","components/routes.tsx","components/layout.tsx","App.tsx","reportWebVitals.ts","store/index.tsx","index.tsx"],"names":["DateInput","placeholder","name","isPrepend","invalid","input","useRef","fieldInputClassName","useEffect","current","_flatpickr","_input","flatpickr","Spanish","altFormat","altInput","onChange","selectedDates","dateStr","instance","className","type","ref","TextInput","inputClassName","nativeInputProps","useState","isFilled","setIsFilled","onFocus","onBlur","e","target","value","SelectInput","options","map","option","label","Field","prepend","fieldClassName","props","CheckboxField","children","setValue","evt","checked","defaultProps","fetchPerson","createAsyncThunk","a","Axios","get","response","data","results","personalInfoSlice","put","delete","createSlice","initialState","meta","loading","done","error","documentNumber","documentType","birthday","cellphone","firstName","lastNamePat","lastNameMat","gender","acceptedTyc","acceptedMkt","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","id","dob","date","phone","replace","title","first","last","rejected","HomeScreen","dispatch","useDispatch","history","useHistory","fetchPersonStatus","useSelector","store","personalInfo","firstUpdate","goto","useCallback","path","push","process","useLayoutEffect","invalidFields","setInvalidFields","handleSubmit","event","preventDefault","fd","FormData","_invalidFields","forEach","key","validInput","test","isValidDocument","isRequired","isValidCellphone","isChecked","Object","keys","length","onSubmit","documentTypeList","min","max","tyc","href","rel","StepIndicator","currentStep","onClick","goBack","PersonalInfoScreen","person","About","Dashboard","Routes","exact","Layout","location","useLocation","React","layoutClassname","setLayoutClassname","pathname","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","personalInfoReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.963cb779.chunk.js","sourcesContent":["import { useState, SyntheticEvent, useRef, useEffect } from 'react';\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\nimport IListOption from '../interfaces/IListOption';\r\nimport flatpickr from \"flatpickr\";\r\nimport { Spanish } from \"flatpickr/dist/l10n/es.js\"\r\n\r\nexport function DateInput({placeholder, name, isPrepend, invalid}: InferProps<typeof DateInput.propTypes>){\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  let fieldInputClassName = 'field__input';\r\n\r\n  if(!placeholder){\r\n    fieldInputClassName += ' field__input--no-placeholder';\r\n  }\r\n\r\n  if(invalid){\r\n    fieldInputClassName += ' field__input--invalid';\r\n  }\r\n\r\n  if(isPrepend){\r\n    fieldInputClassName += ' field__input--prepend';\r\n  }\r\n\r\n  useEffect(() => {\r\n    if( input.current !== null && !(input.current as any)._flatpickr ){\r\n      let _input = input.current;\r\n      flatpickr(_input, {\r\n        \"locale\": Spanish,\r\n        altFormat: 'd/m/Y',\r\n        altInput: true,\r\n        onChange: function(selectedDates, dateStr, instance) {\r\n          (instance.altInput as HTMLInputElement).className += \" filled\";\r\n        },\r\n      });\r\n    }\r\n  }, [])\r\n\r\n  return <label className={fieldInputClassName}>\r\n    <input type=\"text\" ref={input} name={name} />\r\n    {placeholder && <div className=\"field__placeholder\"><span>{ placeholder }</span></div>}\r\n  </label> \r\n}\r\n\r\nDateInput.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isPrepend: PropTypes.bool.isRequired\r\n};\r\n\r\nDateInput.defaultProps = {\r\n  isPrepend: false\r\n};\r\n\r\nexport function TextInput({placeholder, type, name, isPrepend, invalid, nativeInputProps}: InferProps<typeof TextInput.propTypes>){\r\n\r\n  const [isFilled, setIsFilled] = useState(false);\r\n\r\n  let fieldInputClassName = 'field__input';\r\n\r\n  if(!placeholder){\r\n    fieldInputClassName += ' field__input--no-placeholder';\r\n  }\r\n\r\n  if(invalid){\r\n    fieldInputClassName += ' field__input--invalid';\r\n  }\r\n\r\n  if(isPrepend){\r\n    fieldInputClassName += ' field__input--prepend';\r\n  }\r\n\r\n  let inputClassName;\r\n  if(isFilled){\r\n    inputClassName = 'filled';\r\n  }\r\n\r\n  const handleFocus = () => setIsFilled(true)\r\n  const handleBlur = (e: SyntheticEvent ) => {\r\n    const value = (e.target as HTMLInputElement).value;\r\n    if(!value){\r\n      setIsFilled(false)\r\n    }\r\n  }\r\n\r\n  return <label className={fieldInputClassName}>\r\n    <input type={type} {...nativeInputProps} name={name} className={inputClassName} onFocus={handleFocus} onBlur={handleBlur} />\r\n    {placeholder && <div className=\"field__placeholder\"><span>{ placeholder }</span></div>}\r\n  </label> \r\n}\r\n\r\nTextInput.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  type: PropTypes.string.isRequired,  \r\n  name: PropTypes.string.isRequired,\r\n  isPrepend: PropTypes.bool.isRequired,\r\n  nativeInputProps: PropTypes.object\r\n};\r\n\r\nTextInput.defaultProps = {\r\n  type: 'text',\r\n  isPrepend: false,\r\n  nativeInputProps: {}\r\n};\r\n\r\ninterface ISelectInputProps{\r\n  placeholder?: string,\r\n  options: Array<IListOption>,\r\n  name: string,\r\n  isPrepend: boolean,\r\n  invalid?: boolean\r\n}\r\n\r\nexport function SelectInput({placeholder, options, name, invalid, isPrepend}: ISelectInputProps){\r\n\r\n  let fieldInputClassName = 'field__input';\r\n\r\n  if(!placeholder){\r\n    fieldInputClassName += ' field__input--no-placeholder';\r\n  }\r\n\r\n  if(isPrepend){\r\n    fieldInputClassName += ' field__input--prepend';\r\n  }\r\n\r\n  if(invalid){\r\n    fieldInputClassName += ' field__input--invalid';\r\n  }\r\n\r\n  return <label className={fieldInputClassName}>\r\n    <select name={name}>\r\n      { options.map(option => <option value={ option.value } key={ option.value }>{ option.label }</option>) }\r\n    </select>\r\n    {placeholder && <div className=\"field__placeholder\"><span>{ placeholder }</span></div>}\r\n  </label>\r\n}\r\n\r\n\r\nSelectInput.propTypes = {\r\n  invalid: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n  options: PropTypes.array.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isPrepend: PropTypes.bool.isRequired\r\n};\r\n\r\nSelectInput.defaultProps = {\r\n  type: 'text',\r\n  isPrepend: false\r\n};\r\n\r\nexport function Field({input, prepend}: any){\r\n  let fieldClassName = 'field';\r\n  \r\n  if(input.props.invalid || prepend?.props?.invalid){\r\n    fieldClassName += ' field--invalid';\r\n  }\r\n\r\n  return <div className={fieldClassName}>\r\n    {prepend}\r\n    {input}\r\n  </div>\r\n}\r\n\r\nexport function CheckboxField({children, name, className}: InferProps<typeof CheckboxField.propTypes>){\r\n  const [value, setValue] = useState('off');\r\n  return <label className={`checkbox-field ${className}`}>\r\n    <input type=\"checkbox\" name={name} onChange={evt => setValue(evt.target.checked ? 'on' : 'off')}/>\r\n    <input type=\"hidden\" name={name} value={value}/>\r\n    <div className=\"checkbox-field__box\"></div>\r\n    <div className=\"gap\"></div>\r\n    <div className=\"checkbox-field__legend\">\r\n      {children}\r\n    </div>\r\n  </label>\r\n}\r\n\r\nCheckboxField.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport function RadioListField({options, name, label}: InferProps<typeof RadioListField.propTypes>){\r\n  return <div className=\"radiolist-field\">\r\n    <p>{label}</p>\r\n\r\n    \r\n    \r\n  </div>\r\n}\r\nRadioListField.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { AnyAction } from 'redux'\r\nimport Axios from 'axios';\r\nimport IStateMeta from '../interfaces/IStateMeta'\r\nimport IPersonalInfo from '../interfaces/IPersonalInfo'\r\n\r\ninterface IPersonalInfoState extends IPersonalInfo {\r\n  meta: IStateMeta,\r\n}\r\n\r\nconst initialState: IPersonalInfoState = {\r\n  meta: {\r\n    loading: false,\r\n    done: false,\r\n    error: false\r\n  },\r\n  documentNumber: null,\r\n  documentType: null,\r\n\r\n  birthday: null,\r\n  cellphone: null,\r\n  firstName: null,\r\n  lastNamePat: null,\r\n  lastNameMat: null,\r\n  gender: null,\r\n\r\n  acceptedTyc: null,\r\n  acceptedMkt: null\r\n}\r\n\r\nexport const fetchPerson = createAsyncThunk('personalInfo/fetchPerson', async () => {\r\n  let response = await Axios.get('https://randomuser.me/api?nat=es&inc=name,gender,id,dob,phone');\r\n  return response.data.results[0];\r\n});\r\n\r\nexport const updatePerson = createAsyncThunk('personalInfo/updatePerson', async () => {\r\n  let response = await Axios.put('https://randomuser.me/api?nat=es&inc=name,gender,id,dob,phone');\r\n  return response.data;\r\n});\r\n\r\nexport const deletePerson = createAsyncThunk('personalInfo/deletePerson', async () => {\r\n  let response = await Axios.delete('https://randomuser.me/api?nat=es&inc=name,gender,id,dob,phone');\r\n  return response.data;\r\n});\r\n\r\nconst personalInfoSlice = createSlice({\r\n  name: 'personalInfo',\r\n  initialState,\r\n  reducers: {\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(fetchPerson.pending, (state: IPersonalInfoState) => {\r\n      state.meta.loading = true\r\n      state.meta.done = false\r\n      state.meta.error = false\r\n    })\r\n    .addCase(fetchPerson.fulfilled, (state: IPersonalInfoState, action: AnyAction) => {\r\n\r\n      state.meta.loading = false\r\n      state.meta.done = true\r\n      state.meta.error = false\r\n\r\n      state.documentNumber = action.payload.id.value;\r\n      state.documentType = action.payload.id.name;\r\n      state.birthday = action.payload.dob.date; // check\r\n      state.cellphone = action.payload.phone.replace(/[^0-9]/g, '');\r\n      state.firstName = action.payload.name.title;\r\n      state.lastNamePat = action.payload.name.first;\r\n      state.lastNameMat = action.payload.name.last;\r\n      state.gender = action.payload.gender;\r\n\r\n      state.acceptedTyc = true;\r\n      state.acceptedMkt = true;\r\n      \r\n      // state.acceptedTyc = action.payload.acceptedTyc;\r\n      // state.acceptedMkt = action.payload.acceptedMkt;\r\n    })\r\n    .addCase(fetchPerson.rejected, (state: IPersonalInfoState) => {\r\n      state.meta.loading = false\r\n      state.meta.done = false\r\n      state.meta.error = true\r\n    })\r\n  },\r\n})\r\n\r\nexport default personalInfoSlice.reducer\r\n","import { useLayoutEffect, useState, useRef, useCallback } from 'react';\r\nimport {\r\n  useSelector,\r\n  useDispatch\r\n} from 'react-redux'\r\n\r\nimport {\r\n  isChecked,\r\n  isRequired,\r\n  isValidCellphone,\r\n  isValidDocument\r\n} from '../../utils/validate'\r\n\r\nimport {Field, CheckboxField, SelectInput, TextInput, DateInput} from '../field'\r\n\r\nimport {\r\n  fetchPerson\r\n} from '../../store/personal-info'\r\n\r\nimport documentTypeList from '../../json/documentTypeList.json';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction HomeScreen (){\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const fetchPersonStatus = useSelector(store => (store as any).personalInfo.meta);\r\n\r\n  const firstUpdate = useRef(true);\r\n\r\n  const goto = useCallback((path: string) => {\r\n    history.push(`${process.env.PUBLIC_URL}${path}`)\r\n  }, [history]);\r\n\r\n  useLayoutEffect (() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n      return;\r\n    }\r\n\r\n    if(fetchPersonStatus.done){\r\n      goto('/datos-personales');\r\n    }\r\n  }, [ fetchPersonStatus, goto ])\r\n\r\n  const [invalidFields, setInvalidFields] = useState({});\r\n\r\n  const handleSubmit = useCallback((event: any) => {\r\n    event.preventDefault();\r\n    const fd = new FormData(event.target)\r\n\r\n    const _invalidFields: any = {};\r\n\r\n    const documentType: any = fd.get('documentType');\r\n\r\n    fd.forEach((value, key) => {\r\n      let validInput = true;\r\n\r\n      switch(key){\r\n        case 'documentNumber': validInput = isValidDocument(value, documentType); break;\r\n        case 'birthday': validInput = isRequired(value); break;\r\n        case 'cellphone': validInput = isValidCellphone(value); break;\r\n        case 'tyc': validInput = isChecked(value); break;\r\n      }\r\n\r\n      if(!validInput){\r\n        _invalidFields[key] = true\r\n      }\r\n    });\r\n\r\n    setInvalidFields(_invalidFields);\r\n  \r\n    if(Object.keys(_invalidFields).length === 0){\r\n      dispatch(fetchPerson());\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text--h2 text--light text--h2\">Obtén tu <span className=\"text--regular text--blue\">seguro ahora</span></h2>\r\n      <p className=\"page__description text--light\">Ingresa los datos para comenzar.</p>\r\n\r\n      <form action=\"#\" className=\"form\" onSubmit={handleSubmit}>\r\n\r\n        <Field\r\n          input={ <TextInput invalid={(invalidFields as any).documentNumber} placeholder=\"Nro. de Documento\" name=\"documentNumber\"/> }\r\n          prepend={ <SelectInput invalid={(invalidFields as any).documentType} isPrepend options={documentTypeList} name=\"documentType\"/> }\r\n        />\r\n\r\n        <Field\r\n          input={ <DateInput invalid={(invalidFields as any).birthday} placeholder=\"Fecha de nacimiento\" name=\"birthday\" /> } />\r\n\r\n        \r\n        <Field\r\n          input={ <TextInput invalid={(invalidFields as any).cellphone} type=\"number\" placeholder=\"Celular\" name=\"cellphone\" nativeInputProps={{min: 900000000, max: 999999999}}/> }\r\n        />\r\n\r\n        <CheckboxField name=\"tyc\" className={(invalidFields as any).tyc ? \"text--red\" : \"text--grey-1\"}>\r\n          Acepto la <a className={(invalidFields as any).tyc ? \"text--red\" : \"text--grey-1\"} href=\"https://www.termsandcondiitionssample.com/\" rel=\"noreferrer\" target=\"_blank\">Política de Protección de Datos Personales y los Términos y Condiciones.</a>\r\n        </CheckboxField>\r\n\r\n        <CheckboxField name=\"marketing\" className=\"text--grey-1\">\r\n          Acepto la <a className=\"text--grey-1\" href=\"https://www.termsandcondiitionssample.com/\" rel=\"noreferrer\" target=\"_blank\">Política de Envío de Comunicaciones Comerciales.</a>\r\n        </CheckboxField>\r\n\r\n        <button type=\"submit\">Enviar</button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;","export function isRequired(value: any): boolean{\r\n  return !!value;\r\n}\r\n\r\nexport function isValidName(value: any): boolean{\r\n  return !/[^a-zA-ZáÁàÀâÂåÅãÃäÄæÆçÇéÉèÈêÊëËíÍìÌîÎïÏñÑóÓòÒôÔøØõÕöÖßúÚùÙûÛüÜÿ\\s,.]/.test(value)\r\n}\r\n\r\nexport function isValidCellphone(value: any): boolean{\r\n  return /^9[0-9]{8}$/.test(value);\r\n}\r\n\r\nexport function isChecked(value: any): boolean{\r\n  return value === 'on';\r\n}\r\n\r\nexport function isValidDocument(value: any, type: string): boolean{\r\n  switch(type){\r\n    case 'DNI': return /^[0-9]{8}$/.test(value);\r\n    case 'RUC': return /(10|20)[0-9]{9}/.test(value);\r\n    default: return false;\r\n  }\r\n}","import {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport PropTypes, { InferProps } from \"prop-types\";\r\n\r\nfunction StepIndicator ({currentStep}: InferProps<typeof StepIndicator.propTypes>) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <p className=\"page__step-indicator\">\r\n      <button className=\"page__goback-button\" onClick={history.goBack} />\r\n      <span className=\"text--blue\">Paso {currentStep}</span> de 7\r\n    </p>\r\n  )\r\n}\r\n\r\nStepIndicator.propTypes = {\r\n  currentStep: PropTypes.number.isRequired\r\n};\r\n\r\nexport default StepIndicator;","import { useLayoutEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport StepIndicator from '../step-indicator'\r\n\r\nimport {Field, SelectInput, TextInput, DateInput} from '../field'\r\n\r\nimport documentTypeList from '../../json/documentTypeList.json';\r\n\r\nfunction PersonalInfoScreen (){\r\n\r\n  const person = useSelector(store => (store as any).personalInfo.meta);\r\n  const history = useHistory();\r\n\r\n  const goto = useCallback((path: string) => {\r\n    history.push(`${process.env.PUBLIC_URL}${path}`)\r\n  }, [history]);\r\n\r\n  useLayoutEffect(() => {\r\n    if(!person.done){\r\n      goto('/');\r\n    }\r\n  }, [ person.done, goto ])\r\n\r\n  return (\r\n    <div>\r\n      <StepIndicator currentStep={1} />\r\n      \r\n      \r\n      <form action=\"#\" className=\"form\">\r\n\r\n        <Field\r\n          input={<TextInput placeholder=\"Nro. de Documento\" name=\"documentNumber\"/>}\r\n          prepend={ <SelectInput isPrepend options={documentTypeList} name=\"documentType\"/> }\r\n        />\r\n\r\n        <Field\r\n          input={<TextInput placeholder=\"Nombres\" name=\"firstName\"/>}\r\n        />\r\n\r\n        <Field\r\n          input={<TextInput placeholder=\"Apellido Paterno\" name=\"lastNamePat\"/>}\r\n        />\r\n\r\n        <Field\r\n          input={<TextInput placeholder=\"Apellido Materno\" name=\"lastNameMat\"/>}\r\n        />\r\n\r\n        <Field\r\n          input={<DateInput placeholder=\"Fecha de Nacimiento\" name=\"lastNameMat\"/>}\r\n        />\r\n\r\n        {/* <Field\r\n          input={ <TextInput invalid={(invalidFields as any).documentNumber} placeholder=\"Nro. de Documento\" name=\"documentNumber\"/> }\r\n          prepend={ <SelectInput invalid={(invalidFields as any).documentType} isPrepend options={documentTypeList} name=\"documentType\"/> }\r\n        />\r\n\r\n        <Field\r\n          input={ <DateInput invalid={(invalidFields as any).birthday} placeholder=\"Fecha de nacimiento\" name=\"birthday\" /> } />\r\n\r\n        \r\n        <Field\r\n          input={ <TextInput invalid={(invalidFields as any).cellphone} type=\"number\" placeholder=\"Celular\" name=\"cellphone\" nativeInputProps={{min: 900000000, max: 999999999}}/> }\r\n        />\r\n\r\n        <CheckboxField name=\"tyc\" className={(invalidFields as any).tyc ? \"text--red\" : \"text--grey\"}>\r\n          Acepto la <a className={(invalidFields as any).tyc ? \"text--red\" : \"text--grey\"} href=\"https://www.termsandcondiitionssample.com/\" rel=\"noreferrer\" target=\"_blank\">Política de Protección de Datos Personales y los Términos y Condiciones.</a>\r\n        </CheckboxField>\r\n\r\n        <CheckboxField name=\"marketing\" className=\"text--grey\">\r\n          Acepto la <a className=\"text--grey\" href=\"https://www.termsandcondiitionssample.com/\" rel=\"noreferrer\" target=\"_blank\">Política de Envío de Comunicaciones Comerciales.</a>\r\n        </CheckboxField> */}\r\n\r\n        <button type=\"submit\">Enviar</button>\r\n\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonalInfoScreen;","import {\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport HomeScreen from './screen/home-screen'\r\nimport PersonalInfoScreen from './screen/personal-info-screen'\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h2>About</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div>\r\n      <h2>Dashboard</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction Routes(){\r\n  return <Switch>\r\n    <Route exact path=\"/\">\r\n      <HomeScreen />\r\n    </Route>\r\n    <Route path=\"/datos-personales\">\r\n      <PersonalInfoScreen />\r\n    </Route>\r\n    <Route path=\"/elige-seguro\">\r\n      <About />\r\n    </Route>\r\n    <Route path=\"/gracias\">\r\n      <Dashboard />\r\n    </Route>\r\n  </Switch>\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport {\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nimport Routes from './routes'\r\n\r\nfunction Layout(){\r\n  \r\n  const location = useLocation();\r\n\r\n  const [ layoutClassname, setLayoutClassname ] = React.useState('layout');\r\n\r\n  React.useEffect(() => {\r\n    switch(location.pathname){\r\n      case '/': setLayoutClassname('layout layout--home-page'); break;\r\n      case '/gracias': setLayoutClassname('layout layout--thankyou-page'); break;\r\n      default: setLayoutClassname('layout layout--insurance-form-page'); break;\r\n    }\r\n  }, [ location ])\r\n\r\n  return <div className={layoutClassname}>\r\n    <div className=\"layout__sidebar\">\r\n      <ul>\r\n        <li>\r\n          <Link to={`${process.env.PUBLIC_URL}/`}>Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${process.env.PUBLIC_URL}/datos-personales`}>Datos personales</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${process.env.PUBLIC_URL}/elige-seguro`}>Elige tu seguro</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${process.env.PUBLIC_URL}/gracias`}>Gracias</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div className=\"layout__content\">\r\n      <div className=\"container page\">\r\n        <Routes />\r\n      </div>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nimport Layout from './components/layout'\n\nfunction App() {\n  let routerProps: any = {};\n\n//  if(process.env.ROUTER_BASENAME){\n//    routerProps['basename'] = process.env.ROUTER_BASENAME;\n//  }\n\n  return (\n    <Router {...routerProps}>\n      <Layout />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport personalInfoReducer from './personal-info';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    personalInfo: personalInfoReducer\r\n  }\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/index';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}